---
- hosts: fortigates
  gather_facts: no

  vars:
    output_path: "out/raw_data"
    output_dir: "default/0"

  tasks:

  # Execute CLI commands for Global and VDOMs 
  - name: "Get raw info for Global"
    delegate_to: localhost
    fortiosconfig:
     action: "ssh"
     host:  "{{ ansible_host }}"
     username: "{{ ansible_user }}"
     password: "{{ ansible_password }}"
     commands: |
            config global
            show full | grep vrf  
    when: "vdom_mode | default(false)"
    with_items: "global"
    register: raw_global

  - name: "Get raw info for VDOMs: {{ hostvars[inventory_hostname].vdoms.split(',') }}"
    delegate_to: localhost
    fortiosconfig:
      action: "ssh"
      host:  "{{ ansible_host }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_password }}"
      commands: |
            config vdom
            edit {{ item }}

            get router info routing-table database
            get router info6 routing-table database

            get router info bgp summary

            get vpn ipsec tunnel summary
    when: "vdom_mode | default(false)"
    with_items: "{{ hostvars[inventory_hostname].vdoms.split(',') }}"
    register: raw_vdom
  


  - debug:
      msg: "{{ item.meta.out }}"
    with_items: 
    - "{{ raw_vdom.results }}"
    - "{{ raw_global.results }}"
    loop_control:
      label: "(o.0)"

  # Look for errors
  - fail:
      msg: "During execution there are some errors:\n{{ item.meta.out }}"
    when: item.meta.err == true
    with_items: 
    - "{{ raw_vdom.results }}"


  # Output workflow
  - name: Create a directory if it does not exist
    delegate_to: localhost
    file:
      path: "{{ output_path }}/{{ output_dir }}"
      state: directory
      recurse: yes
    run_once: True

  - name: "Dump CLI output"
    delegate_to: localhost
    copy:
      content: "{{ (item['meta']['out'].replace('\\r\\n', '\n')|string).replace('\\n', '\n') }}"
      dest: "{{ output_path }}/{{ output_dir }}/{{ item['item'] }}_{{ inventory_hostname }}.state"
    with_items: 
    - "{{ raw_vdom.results }}"
    - "{{ raw_global.results }}"
    loop_control:
      label: "(o.0)"